#!/usr/bin/env bash
set -e
eval "$("$(dirname "$0")"/adr-config)"

## usage: adr generate table [-i INTRO] [-o OUTRO] [-p LINK_PREFIX]
##
## Generates a table in Markdown format to stdout that contains the ADR name
## and status.
##
## Options:
##
## -i INTRO  precede the table with the given INTRO text.
## -o OUTRO  follow the table with the given OUTRO text.
## -p LINK_PREFIX
##           prefix each decision file link with LINK_PREFIX.
##
## Both INTRO and OUTRO must be in Markdown format.

link_prefix=

while getopts i:o:p: arg; do
  case "${arg}" in
  i)
    intro="${OPTARG}"
    ;;
  o)
    outro="${OPTARG}"
    ;;
  p)
    link_prefix="${OPTARG}"
    ;;
  *)
    echo "Not implemented: ${arg}" >&2
    exit 1
    ;;
  esac
done
shift $((OPTIND - 1))

if [[ -n "${intro}" ]]; then
  cat "${intro}"
  echo
fi

echo "|ADR|Status|"
echo "|---|---|"
for f in $("${adr_bin_dir:?}"/adr-list); do
  title="$("${adr_bin_dir:?}"/_adr_title "$f")"
  link="${link_prefix}$(basename "$f")"
  status="$("${adr_bin_dir:?}"/_adr_status "$f")"

  echo "|[${title}](${link})|${status}|"
done

if [[ -n "${outro}" ]]; then
  echo
  cat "${outro}"
fi
