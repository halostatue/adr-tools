#!/usr/bin/env bash
set -e
eval "$("$(dirname "$0")"/adr-config)"

## usage: adr generate toc [-s] [-i INTRO] [-o OUTRO] [-p LINK_PREFIX]
##
## Generates a table of contents in Markdown format to stdout.
##
## Options:
##
## -s        include the state of each decision next to its link.
## -i INTRO  precede the table of contents with the given INTRO text.
## -o OUTRO  follow the table of contents with the given OUTRO text.
## -p LINK_PREFIX
##           prefix each decision file link with LINK_PREFIX.
## -r        list the records in reverse order
##
## Both INTRO and OUTRO must be in Markdown format.

link_prefix=
output_status=
list_args=()

while getopts rsi:o:p: arg; do
  case "$arg" in
  s)
    output_status=1
    shift
    ;;
  r)
    list_args+=("-r")
    ;;
  i)
    intro="$OPTARG"
    ;;
  o)
    outro="$OPTARG"
    ;;
  p)
    link_prefix="$OPTARG"
    ;;
  esac
done

cat <<EOF
# Architecture Decision Records

EOF

if [ -n "$intro" ]; then
  cat "$intro"
  echo
fi

for f in $("$adr_bin_dir/adr-list" "${list_args[@]}"); do
  title=$("$adr_bin_dir/_adr_title" "$f")
  link=${link_prefix}$(basename "$f")
  status=

  if [[ "$output_status" == "1" ]]; then
    # We're only interested in the first line of the status (e.g. Accepted).
    # Second line, if any, will be a reference to another ADR that supersedes
    # this record, that this record supersedes or that amends it.
    # Additionally, prefix ADR links if prefix specified.
    status=": $("$adr_bin_dir/_adr_status" $f | head -n 1 | sed -E -e "s/\((.+\.md)\)/(${link_prefix//\//\\/}\1)/")"
  fi

  echo -e "* [$title]($link)$status"
done

if [ ! -z "$outro" ]; then
  echo
  cat "$outro"
fi
